{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-two/src/components/Comments/Comments.js\";\nimport React from 'react';\nimport './Comments.scss';\nimport Comment from '../Comment/Comment';\nimport CommentForm from '../CommentForm/CommentForm';\nimport { v4 as uuid } from 'uuid';\nimport { reverseFirstThreeFunc } from '../../modules/reverseFirstThreeFunc'; // function reverseFirstThree(ls) {\n//     let firstThree = ls.splice(0, 3);\n//     let restofArray = ls;\n//     firstThree.reverse();\n//     let finalArray = firstThree.concat(restofArray);\n//     return finalArray;\n// }\n\nfunction Comments({\n  currentVideo,\n  submitHandler\n}) {\n  let reversedComments = currentVideo.comments.slice().reverse();\n  let newComments = reverseFirstThreeFunc(reversedComments);\n  console.log(newComment);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comments\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"comments__title\",\n      children: \"3 Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(CommentForm, {\n      currentVideo: currentVideo,\n      submitHandler: submitHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this), newComments.map(comment => {\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        id: comment.id,\n        name: comment.name,\n        timestamp: comment.timestamp,\n        comment: comment.comment\n      }, uuid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 53\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 13\n  }, this);\n}\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-two/src/components/Comments/Comments.js"],"names":["React","Comment","CommentForm","v4","uuid","reverseFirstThreeFunc","Comments","currentVideo","submitHandler","reversedComments","comments","slice","reverse","newComments","console","log","newComment","map","comment","id","name","timestamp"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAASC,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SAAQC,qBAAR,QAAoC,qCAApC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAkB;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAlB,EAAgD;AAC5C,MAAIC,gBAAgB,GAAGF,YAAY,CAACG,QAAb,CAAsBC,KAAtB,GAA8BC,OAA9B,EAAvB;AACA,MAAIC,WAAW,GAAGR,qBAAqB,CAACI,gBAAD,CAAvC;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ;AAGI,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AAAa,MAAA,YAAY,EAAET,YAA3B;AAAyC,MAAA,aAAa,EAAEC;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKK,WAAW,CAACI,GAAZ,CAAiBC,OAAD,IAAW;AAAC,0BAAO,QAAC,OAAD;AAAuB,QAAA,EAAE,EAAGA,OAAO,CAACC,EAApC;AAAyC,QAAA,IAAI,EAAED,OAAO,CAACE,IAAvD;AAA6D,QAAA,SAAS,EAAEF,OAAO,CAACG,SAAhF;AAA2F,QAAA,OAAO,EAAEH,OAAO,CAACA;AAA5G,SAAcd,IAAI,EAAlB;AAAA;AAAA;AAAA;AAAA,cAAP;AAA8H,KAA1J,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQP;;KAdQE,Q;AAgBT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport './Comments.scss';\nimport Comment from '../Comment/Comment';\nimport CommentForm from '../CommentForm/CommentForm';\nimport { v4 as uuid } from 'uuid';\nimport {reverseFirstThreeFunc} from '../../modules/reverseFirstThreeFunc';\n\n// function reverseFirstThree(ls) {\n//     let firstThree = ls.splice(0, 3);\n//     let restofArray = ls;\n//     firstThree.reverse();\n//     let finalArray = firstThree.concat(restofArray);\n//     return finalArray;\n// }\n\nfunction Comments({currentVideo, submitHandler}){\n    let reversedComments = currentVideo.comments.slice().reverse()\n    let newComments = reverseFirstThreeFunc(reversedComments);\n    console.log(newComment)\n\n    \n        return (\n            <div className=\"comments\" >\n                <h2 className=\"comments__title\">3 Comments</h2>\n                <CommentForm currentVideo={currentVideo} submitHandler={submitHandler} />\n                {newComments.map((comment)=>{return <Comment key={uuid()}  id ={comment.id}  name={comment.name} timestamp={comment.timestamp} comment={comment.comment}/>})}\n            </div>\n        )\n    \n}\n\nexport default Comments"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-three/client-side/src/components/Comment/Comment.js\";\nimport './Comment.scss'; // realTime takes in a number in millisec and returns a string with date \n\nfunction realTime(timestamp) {\n  let time = new Date(timestamp);\n  let timeString = time.toLocaleString();\n  let readableDate;\n\n  if (timeString[0] === '0') {\n    readableDate = timeString.slice(0, 9);\n  } else {\n    readableDate = timeString.slice(0, 10);\n  }\n\n  return readableDate;\n} // COMMENT Component returns a comment from MainVideo\n\n\nfunction Comment({\n  name,\n  timestamp,\n  comment,\n  id\n}) {\n  let newTime = realTime(timestamp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__data-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment__data-info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment__data-info-time\",\n          children: newTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment__data-comment\",\n        children: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-three/client-side/src/components/Comment/Comment.js"],"names":["realTime","timestamp","time","Date","timeString","toLocaleString","readableDate","slice","Comment","name","comment","id","newTime"],"mappings":";;AAAA,OAAO,gBAAP,C,CAEA;;AACA,SAASA,QAAT,CAAmBC,SAAnB,EAA8B;AAC1B,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAX;AACA,MAAIG,UAAU,GAAGF,IAAI,CAACG,cAAL,EAAjB;AACA,MAAIC,YAAJ;;AACA,MAAIF,UAAU,CAAC,CAAD,CAAV,KAAkB,GAAtB,EAA2B;AACvBE,IAAAA,YAAY,GAAGF,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,CAApB,CAAf;AACH,GAFD,MAEO;AACHD,IAAAA,YAAY,GAAGF,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAf;AACH;;AACD,SAAOD,YAAP;AACH,C,CAED;;;AACA,SAASE,OAAT,CAAiB;AAACC,EAAAA,IAAD;AAAOR,EAAAA,SAAP;AAAkBS,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAjB,EAAiD;AAC7C,MAAIC,OAAO,GAAGZ,QAAQ,CAACC,SAAD,CAAtB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCQ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCG;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCF;AAAtC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAA8BC,EAA9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAdQH,O;AAgBT,eAAeA,OAAf","sourcesContent":["import './Comment.scss';\n\n// realTime takes in a number in millisec and returns a string with date \nfunction realTime (timestamp) {\n    let time = new Date(timestamp)\n    let timeString = time.toLocaleString();\n    let readableDate;\n    if (timeString[0] === '0') {\n        readableDate = timeString.slice(0, 9)\n    } else {\n        readableDate = timeString.slice(0, 10)\n    }\n    return readableDate;\n}\n\n// COMMENT Component returns a comment from MainVideo\nfunction Comment({name, timestamp, comment, id}) {\n    let newTime = realTime(timestamp)\n    return (\n        <div className=\"comment\" key={id} >\n            <div className=\"comment__img\"></div>\n            <div className=\"comment__data\">\n                <div className=\"comment__data-info\">\n                    <p className=\"comment__data-info-name\">{name}</p>\n                    <p className=\"comment__data-info-time\">{newTime}</p>\n                </div>\n                <p className=\"comment__data-comment\">{comment}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Comment"]},"metadata":{},"sourceType":"module"}
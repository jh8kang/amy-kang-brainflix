{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-two/src/components/Comment/Comment.js\";\nimport './Comment.scss';\nimport { realTimeFunc } from '../../modules/realTimeFunc'; // timeCalculator takes in a string and returns a readable time string\n// function timeCalculator(date) {\n//     let todayMonth = 12;\n//     let todayDay = 19;\n//     let todayYear = 2018;\n//     let month = Number(date.slice(0, 2));\n//     let day = Number(date.slice(3, 5));\n//     let year = Number(date.slice(6));\n//     if (year < todayYear) {\n//         return `${todayYear - year} years ago`;\n//     } else if (month === todayMonth - 1) {\n//         return '1 month ago';\n//     } else if (month < todayMonth ) {\n//         return `${todayMonth - month} months ago`;\n//     } else if (day === todayDay - 1) {\n//         return '1 day ago';\n//     } else if (day < todayDay) {\n//         return `${todayDay - day} days ago`;\n//     } \n// }\n\nfunction realTime(timestamp) {\n  let time = new Date(timestamp);\n  let timeString = time.toLocaleString();\n  let justDate = timeString.slice(0, 10);\n  return justDate;\n} // Comment component takes in props and returns JXN for a single comment \n\n\nfunction Comment({\n  name,\n  timestamp,\n  comment,\n  id\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__data-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment__data-info-name\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment__data-info-time\",\n          children: timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment__data-comment\",\n        children: comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-two/src/components/Comment/Comment.js"],"names":["realTimeFunc","realTime","timestamp","time","Date","timeString","toLocaleString","justDate","slice","Comment","name","comment","id"],"mappings":";;AAAA,OAAO,gBAAP;AACA,SAAQA,YAAR,QAA2B,4BAA3B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,CAAmBC,SAAnB,EAA8B;AAC1B,MAAIC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAX;AACA,MAAIG,UAAU,GAAGF,IAAI,CAACG,cAAL,EAAjB;AACA,MAAIC,QAAQ,GAAGF,UAAU,CAACG,KAAX,CAAiB,CAAjB,EAAoB,EAApB,CAAf;AACA,SAAOD,QAAP;AACH,C,CAED;;;AACA,SAASE,OAAT,CAAiB;AAACC,EAAAA,IAAD;AAAOR,EAAAA,SAAP;AAAkBS,EAAAA,OAAlB;AAA2BC,EAAAA;AAA3B,CAAjB,EAAiD;AAE7C,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCF;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCR;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCS;AAAtC;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAA8BC,EAA9B;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAdQH,O;AAgBT,eAAeA,OAAf","sourcesContent":["import './Comment.scss';\nimport {realTimeFunc} from '../../modules/realTimeFunc';\n\n// timeCalculator takes in a string and returns a readable time string\n// function timeCalculator(date) {\n//     let todayMonth = 12;\n//     let todayDay = 19;\n//     let todayYear = 2018;\n//     let month = Number(date.slice(0, 2));\n//     let day = Number(date.slice(3, 5));\n//     let year = Number(date.slice(6));\n\n//     if (year < todayYear) {\n//         return `${todayYear - year} years ago`;\n//     } else if (month === todayMonth - 1) {\n//         return '1 month ago';\n//     } else if (month < todayMonth ) {\n//         return `${todayMonth - month} months ago`;\n//     } else if (day === todayDay - 1) {\n//         return '1 day ago';\n//     } else if (day < todayDay) {\n//         return `${todayDay - day} days ago`;\n//     } \n// }\n\nfunction realTime (timestamp) {\n    let time = new Date(timestamp)\n    let timeString = time.toLocaleString();\n    let justDate = timeString.slice(0, 10)\n    return justDate;\n}\n\n// Comment component takes in props and returns JXN for a single comment \nfunction Comment({name, timestamp, comment, id}) {\n    \n    return (\n        <div className=\"comment\" key={id} >\n            <div className=\"comment__img\"></div>\n            <div className=\"comment__data\">\n                <div className=\"comment__data-info\">\n                    <p className=\"comment__data-info-name\">{name}</p>\n                    <p className=\"comment__data-info-time\">{timestamp}</p>\n                </div>\n                <p className=\"comment__data-comment\">{comment}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Comment"]},"metadata":{},"sourceType":"module"}
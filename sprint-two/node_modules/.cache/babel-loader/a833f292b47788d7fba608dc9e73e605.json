{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-two/src/components/HomePage/HomePage.js\";\nimport './HomePage.scss';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport MainVideo from '../MainVideo/MainVideo';\nimport NextVideos from '../NextVideos/NextVideos';\nimport Comments from '../Comments/Comments';\nimport Content from '../Content/Content'; // Variables \n\nlet firstVideoId = '1af0jruup5gu';\nlet apiKey = '?api_key=c4f92712-c6b3-47a0-abb5-1c487b16a781';\nlet url = 'https://project-2-api.herokuapp.com/videos/'; // HomePage is a statefull component that contains life cycle methods and returns JSX for the Home Page \n\nclass HomePage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      currentVideo: {\n        comments: [{\n          comment: \"\"\n        }]\n      },\n      videoList: []\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n  }\n\n  submitHandler(e, currentVideoId) {\n    e.preventDefault();\n    let newComment = {\n      name: \"BrainFlix User\",\n      comment: e.target.commentInput.value\n    };\n    axios.post(url + currentVideoId + '/comments' + apiKey, newComment).then(res => {\n      let currentVideoState = this.state.currentVideo;\n      let videoNewComments = this.state.currentVideo.comments;\n      videoNewComments.push(res.data);\n      currentVideoState.comments = videoNewComments;\n      this.setState({\n        currentVideo: currentVideoState\n      });\n    }).catch(err => console.log(err));\n    let commentForm = document.querySelector('.comment-form');\n    commentForm.reset();\n  }\n\n  componentDidMount() {\n    axios.get(url + firstVideoId + apiKey).then(res => {\n      this.setState({\n        currentVideo: res.data\n      });\n    }).catch(err => console.log(\"error:\", err));\n    axios.get(url + apiKey).then(res => {\n      console.log(this.state.currentVideo);\n      console.log(res.data);\n      this.setState({\n        videoList: res.data\n      });\n    }).catch(err => console.log(\"error:\", err));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      match\n    } = this.props;\n\n    if (typeof match.params.videoId !== 'undefined') {\n      if (match.params.videoId !== this.state.currentVideo.id) {\n        axios.get(url + match.params.videoId + apiKey).then(res => {\n          this.setState({\n            currentVideo: res.data\n          });\n        }).catch(err => console.log(err));\n        axios.get(url + apiKey).then(res => {\n          let filteredList = res.data.filter(video => video.id !== this.state.currentVideo.id);\n          this.setState({\n            videoList: filteredList\n          });\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(MainVideo, {\n        currentVideo: this.state.currentVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main__content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"main__content-texts\",\n          children: [/*#__PURE__*/_jsxDEV(Content, {\n            currentVideo: this.state.currentVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            submitHandler: this.submitHandler,\n            currentVideo: this.state.currentVideo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n          videoList: this.state.videoList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-two/src/components/HomePage/HomePage.js"],"names":["React","Component","axios","MainVideo","NextVideos","Comments","Content","firstVideoId","apiKey","url","HomePage","constructor","state","currentVideo","comments","comment","videoList","submitHandler","bind","e","currentVideoId","preventDefault","newComment","name","target","commentInput","value","post","then","res","currentVideoState","videoNewComments","push","data","setState","catch","err","console","log","commentForm","document","querySelector","reset","componentDidMount","get","componentDidUpdate","prevProps","prevState","match","props","params","videoId","id","filteredList","filter","video","render"],"mappings":"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","sourcesContent":["import './HomePage.scss';\nimport React, {Component} from 'react'\nimport axios from 'axios'\nimport MainVideo from '../MainVideo/MainVideo'\nimport NextVideos from '../NextVideos/NextVideos'\nimport Comments from '../Comments/Comments';\nimport Content from '../Content/Content';\n\n\n// Variables \nlet firstVideoId = '1af0jruup5gu';\nlet apiKey = '?api_key=c4f92712-c6b3-47a0-abb5-1c487b16a781';\nlet url ='https://project-2-api.herokuapp.com/videos/';\n\n// HomePage is a statefull component that contains life cycle methods and returns JSX for the Home Page \nclass HomePage extends Component {\n    constructor(){\n        super();\n        this.state = {\n            currentVideo: {comments: [{comment: \"\"}]},\n            videoList: [], \n          } \n        this.submitHandler = this.submitHandler.bind(this);\n    }\n\n    submitHandler(e, currentVideoId) {\n        e.preventDefault();\n        let newComment = {\n            name: \"BrainFlix User\",\n            comment: e.target.commentInput.value\n        }\n        axios\n            .post((url + currentVideoId + '/comments' + apiKey), newComment)\n            .then(res=> {\n                let currentVideoState = this.state.currentVideo; \n                let videoNewComments = this.state.currentVideo.comments;\n                videoNewComments.push(res.data);\n                currentVideoState.comments = videoNewComments;\n                this.setState({\n                    currentVideo: currentVideoState,\n                })\n            })\n            .catch((err) => console.log(err))\n        let commentForm = document.querySelector('.comment-form');\n        commentForm.reset();\n    }\n  \n    componentDidMount() {\n        axios\n            .get(url + firstVideoId + apiKey)\n            .then(res=> {\n                this.setState({\n                    currentVideo: res.data,\n                })\n            })\n            .catch((err)=>console.log(\"error:\", err))\n        axios\n            .get(url + apiKey)\n            .then(res => {\n                console.log(this.state.currentVideo)\n                console.log(res.data)\n                this.setState({\n                    videoList: res.data\n                })\n            })\n            .catch(err=>console.log(\"error:\", err))\n        \n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {match} = this.props\n        if (typeof match.params.videoId !== 'undefined') {\n            if (match.params.videoId !== this.state.currentVideo.id) {\n                axios\n                    .get(url + match.params.videoId + apiKey)\n                    .then(res=> {\n                        this.setState({\n                            currentVideo: res.data,\n                        })\n                    })\n                    .catch(err => console.log(err))\n                axios\n                    .get(url + apiKey)\n                    .then(res => {\n                        let filteredList = res.data.filter((video)=> (video.id !== this.state.currentVideo.id))\n                        this.setState({\n                            videoList: filteredList\n                        })\n                    })\n                    \n\n            } \n        } \n    }\n      \n    render() {\n        return (\n            <main className=\"main\">\n                <MainVideo currentVideo = {this.state.currentVideo} />\n                <div className=\"main__content\">\n                    <div className = \"main__content-texts\">\n                        <Content currentVideo = {this.state.currentVideo}/>\n                        <Comments submitHandler={this.submitHandler} currentVideo={this.state.currentVideo} />\n                    </div>\n                    <NextVideos videoList={this.state.videoList} />\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default HomePage"]},"metadata":{},"sourceType":"module"}
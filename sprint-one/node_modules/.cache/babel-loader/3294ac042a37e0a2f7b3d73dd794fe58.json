{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-one/src/components/Comment/Comment.js\";\nimport './Comment.scss'; // function realDate(object) {\n//     if (typeof object.timestamp == \"number\") {\n//         let milliSec = timeInterval(object);\n//         let second = Math.trunc(milliSec / 1000);\n//         let minute = Math.trunc(second / 60);\n//         let hours = Math.trunc(minute / 60);\n//         let days = Math.trunc(hours / 24);\n//         if (days > 0) {\n//             return `${days} days ago`;\n//         } else if (hours > 0) {\n//             return `${hours} hours ago`;\n//         } else if (minute > 0) {\n//             return `${minute} minutes ago`\n//         } else {\n//             return \"Just Posted\"\n//         }\n//     } else {\n//         return object.date;\n//     }\n// }\n\nfunction timeNow() {\n  let timeNow = Date.now();\n  let second = Math.trunc(timeNow / 1000);\n  let minute = Math.trunc(second / 60);\n  let hours = Math.trunc(minute / 60);\n  let days = Math.trunc(hours / 24);\n  let years = Math.trunc(days / 365);\n  console.log(days);\n}\n\nfunction timeCalculator(date) {\n  let month = date.slice(0, 2);\n  let day = date.slice(3, 5);\n  let year = date.slice(6);\n  timeNow();\n}\n\nfunction Comment(props) {\n  timeCalculator(props.timestamp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"comment\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"comment__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment__data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__data-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment__data-info-name\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"comment__data-info-time\",\n          children: props.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"comment__data-comment\",\n        children: props.comment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Comment;\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/amykang/Desktop/BrainStation/Projects/amy-kang-brainflix/sprint-one/src/components/Comment/Comment.js"],"names":["timeNow","Date","now","second","Math","trunc","minute","hours","days","years","console","log","timeCalculator","date","month","slice","day","year","Comment","props","timestamp","name","comment"],"mappings":";;AAAA,OAAO,gBAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAT,GAAmB;AACf,MAAIA,OAAO,GAAGC,IAAI,CAACC,GAAL,EAAd;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,GAAE,IAApB,CAAb;AACA,MAAIM,MAAM,GAAGF,IAAI,CAACC,KAAL,CAAWF,MAAM,GAAG,EAApB,CAAb;AACA,MAAII,KAAK,GAAGH,IAAI,CAACC,KAAL,CAAWC,MAAM,GAAG,EAApB,CAAZ;AACA,MAAIE,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWE,KAAK,GAAG,EAAnB,CAAX;AACA,MAAIE,KAAK,GAAGL,IAAI,CAACC,KAAL,CAAWG,IAAI,GAAG,GAAlB,CAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAGH;;AAED,SAASI,cAAT,CAAwBC,IAAxB,EAA8B;AAC1B,MAAIC,KAAK,GAAGD,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAd,CAAZ;AACA,MAAIC,GAAG,GAAGH,IAAI,CAACE,KAAL,CAAW,CAAX,EAAc,CAAd,CAAV;AACA,MAAIE,IAAI,GAAGJ,IAAI,CAACE,KAAL,CAAW,CAAX,CAAX;AACAf,EAAAA,OAAO;AAGV;;AAED,SAASkB,OAAT,CAAiBC,KAAjB,EAAwB;AACpBP,EAAAA,cAAc,CAACO,KAAK,CAACC,SAAP,CAAd;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCD,KAAK,CAACE;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,yBAAb;AAAA,oBAAwCF,KAAK,CAACC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA,kBAAsCD,KAAK,CAACG;AAA5C;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KAdQJ,O;AAgBT,eAAeA,OAAf","sourcesContent":["import './Comment.scss';\n\n// function realDate(object) {\n//     if (typeof object.timestamp == \"number\") {\n//         let milliSec = timeInterval(object);\n//         let second = Math.trunc(milliSec / 1000);\n//         let minute = Math.trunc(second / 60);\n//         let hours = Math.trunc(minute / 60);\n//         let days = Math.trunc(hours / 24);\n\n//         if (days > 0) {\n//             return `${days} days ago`;\n//         } else if (hours > 0) {\n//             return `${hours} hours ago`;\n//         } else if (minute > 0) {\n//             return `${minute} minutes ago`\n//         } else {\n//             return \"Just Posted\"\n//         }\n//     } else {\n//         return object.date;\n//     }\n// }\n\nfunction timeNow() {\n    let timeNow = Date.now();\n    let second = Math.trunc(timeNow/ 1000);\n    let minute = Math.trunc(second / 60);\n    let hours = Math.trunc(minute / 60);\n    let days = Math.trunc(hours / 24);\n    let years = Math.trunc(days / 365);\n    console.log(days)\n\n\n}\n\nfunction timeCalculator(date) {\n    let month = date.slice(0, 2);\n    let day = date.slice(3, 5);\n    let year = date.slice(6);\n    timeNow();\n\n\n}\n\nfunction Comment(props) {\n    timeCalculator(props.timestamp)\n    return (\n        <div className=\"comment\">\n            <img className=\"comment__img\"></img>\n            <div className=\"comment__data\">\n                <div className=\"comment__data-info\">\n                    <p className=\"comment__data-info-name\">{props.name}</p>\n                    <p className=\"comment__data-info-time\">{props.timestamp}</p>\n                </div>\n                <p className=\"comment__data-comment\">{props.comment}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Comment"]},"metadata":{},"sourceType":"module"}